var f=Object.defineProperty;var V=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var n=(o,e,t)=>V(o,typeof e!="symbol"?e+"":e,t);import"./modulepreload-polyfill-B5Qt9EMX.js";import{V as N}from"./video-tree-C_pDbh0c.js";class h{constructor(e,t,a=[]){n(this,"id");n(this,"src");n(this,"nodes");n(this,"video");this.id=e,this.src=t,this.nodes=a}static fromJSON(e,t=0){var a;return new h(t,e.src,(a=e.nodes)==null?void 0:a.map((i,d)=>h.fromJSON(i,d)))}async load(){this.video=document.createElement("video"),this.video.playsInline=!0,this.video.preload="auto",this.video.controls=!0,this.video.muted=!0,this.video.autoplay=!0,this.video.src=this.src;const e=new Promise(i=>{const d=()=>{this.video.removeEventListener("canplay",d);const c=()=>{this.video.removeEventListener("canplaythrough",c),this.video.pause(),this.video.currentTime=0,i(this.video)};this.video.addEventListener("canplaythrough",c)};this.video.addEventListener("canplay",d)}),[t,a=[]]=await Promise.all([e,...this.nodes.map(i=>i.load())]);return[t,...a]}getNextVideoTree(){const e=this.nodes.length;if(e)return this.nodes[Math.floor(Math.random()*e)]}play(){this.video.play()}}class T{constructor(e,t,a,i=!1){n(this,"tree");n(this,"canvas");n(this,"hiddenPlayersElem");n(this,"metadata",{});n(this,"currentVideoTree");var d;this.tree=e,this.canvas=t,this.hiddenPlayersElem=a,i&&(this.hiddenPlayersElem.classList.add("debug"),(d=document.getElementById("metadata"))==null||d.classList.add("debug"))}async play(){const e=await this.tree.load(),t=document.getElementById("hidden-players");e.forEach(a=>{this.metadata[this.getVideoName(a)]={last_events:[]},t==null||t.appendChild(a),this.addEventsCallbacks(a)}),this.playNextVideo()}playNextVideo(){var d;const e=((d=this.currentVideoTree)==null?void 0:d.getNextVideoTree())??this.tree;e.play();const t=this.canvas.getContext("2d"),a=(c,l)=>{t&&(t.canvas.width=Math.min(screen.width,window.innerWidth),t.canvas.height=Math.min(screen.height,window.innerHeight));const s=e.video,{width:w,height:E}=this.canvas.getBoundingClientRect();let m=100,u=100;if(s.videoWidth&&s.videoHeight){const v=Math.min(w/s.videoWidth,E/s.videoHeight);m=s.videoWidth*v,u=s.videoHeight*v}t==null||t.drawImage(e.video,0,0,m,u),this.metadata[this.getVideoName(s)].rvfc=l,this.updateMetadata(),e.video.requestVideoFrameCallback(a)};e.video.requestVideoFrameCallback(a);const i=()=>{const{currentTime:c,duration:l}=e.video,s=l-c;if(this.metadata[this.getVideoName(e.video)].video={currentTime:e.video.currentTime,duration:e.video.duration,ended:e.video.ended,paused:e.video.paused,seeking:e.video.seeking,tillEnd:s},this.updateMetadata(),e.video.ended||s<.06){this.playNextVideo();return}window.requestAnimationFrame(i)};window.requestAnimationFrame(i),this.currentVideoTree=e}updateMetadata(){const e=document.getElementById("metadata");if(e){const t=JSON.stringify(this.metadata,null,2);e.innerHTML!==t&&(e.innerHTML=JSON.stringify(this.metadata,null,2))}}getVideoName(e){return e.currentSrc.replace(/(\.mp4)+$/gm,"").slice(-8)}addEventsCallbacks(e){["audioprocess","canplay","canplaythrough","complete","durationchange","emptied","ended","error","loadeddata","loadedmetadata","loadstart","pause","play","playing","progress","ratechange","seeked","seeking","stalled","suspend","timeupdate","volumechange","waiting"].forEach(t=>{e.addEventListener(t,()=>{const a=this.metadata[this.getVideoName(e)].last_events;a.push(t),a.length>4&&a.shift(),this.metadata[this.getVideoName(e)].last_event_ts=Date.now(),this.updateMetadata()})})}}let p=N;const y=new URLSearchParams(window.location.search),g=y.get("tree");g&&(p=JSON.parse(g));const L=y.has("debug"),M=h.fromJSON(p),b=new T(M,document.getElementById("canvas"),document.getElementById("hidden-players"),L),r=document.getElementById("play");r==null||r.addEventListener("click",async()=>{r.innerHTML="Loading...",r.disabled=!0,await b.play(),r.style.display="none"});
