var u=Object.defineProperty;var w=(a,e,t)=>e in a?u(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var d=(a,e,t)=>w(a,typeof e!="symbol"?e+"":e,t);import"./modulepreload-polyfill-B5Qt9EMX.js";import{V as E}from"./video-tree-C_pDbh0c.js";class c{constructor(e,t,i=[]){d(this,"id");d(this,"src");d(this,"nodes");d(this,"video");this.id=e,this.src=t,this.nodes=i}static fromJSON(e,t=0){var i;return new c(t,e.src,(i=e.nodes)==null?void 0:i.map((n,s)=>c.fromJSON(n,s)))}async load(){this.video=document.createElement("video"),this.video.playsInline=!0,this.video.preload="auto",this.video.controls=!1,this.video.muted=!0,this.video.src=this.src;const e=new Promise(n=>{const s=()=>{this.video.removeEventListener("canplay",s);const o=()=>{this.video.removeEventListener("canplaythrough",o),n(this.video)};this.video.addEventListener("canplaythrough",o)};this.video.addEventListener("canplay",s)}),[t,i=[]]=await Promise.all([e,...this.nodes.map(n=>n.load())]);return[t,...i]}getNextVideoTree(){const e=this.nodes.length;if(e)return this.nodes[Math.floor(Math.random()*e)]}play(){this.video.play()}}class V{constructor(e,t,i){d(this,"tree");d(this,"canvas");d(this,"hiddenPlayersElem");d(this,"currentVideoTree");this.tree=e,this.canvas=t,this.hiddenPlayersElem=i}async play(){const e=await this.tree.load(),t=document.getElementById("hidden-players");e.forEach(i=>{t==null||t.appendChild(i)}),this.playNextVideo()}playNextVideo(){var s;const e=((s=this.currentVideoTree)==null?void 0:s.getNextVideoTree())??this.tree;e.play();const t=this.canvas.getContext("2d"),i=()=>{t&&(t.canvas.width=Math.min(screen.width,window.innerWidth),t.canvas.height=Math.min(screen.height,window.innerHeight));const o=e.video,{width:y,height:g}=this.canvas.getBoundingClientRect();let h=100,l=100;if(o.videoWidth&&o.videoHeight){const v=Math.min(y/o.videoWidth,g/o.videoHeight);h=o.videoWidth*v,l=o.videoHeight*v}t==null||t.drawImage(e.video,0,0,h,l),e.video.requestVideoFrameCallback(i)};e.video.requestVideoFrameCallback(i);const n=()=>{e.video.removeEventListener("ended",n),this.playNextVideo()};e.video.addEventListener("ended",n),this.currentVideoTree=e}}let p=E;const L=new URLSearchParams(window.location.search),m=L.get("tree");m&&(p=JSON.parse(m));const f=c.fromJSON(p),T=new V(f,document.getElementById("canvas"),document.getElementById("hidden-players")),r=document.getElementById("play");r==null||r.addEventListener("click",()=>{r.innerHTML="Loading...",r.disabled=!0,T.play()});
