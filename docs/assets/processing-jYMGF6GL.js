var p=Object.defineProperty;var v=(a,s,e)=>s in a?p(a,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[s]=e;var o=(a,s,e)=>v(a,typeof s!="symbol"?s+"":s,e);import"./modulepreload-polyfill-B5Qt9EMX.js";import{C as m,T as u,S as w,c as h,A as y,e as f}from"./index-CU2cXWwI.js";import{V as x}from"./video-tree-C9LeQqEj.js";class T extends m{constructor(e){super();o(this,"tree");o(this,"currentTree");this.tree=e}async play(){const e=new u({text:"Loading",style:{fill:"#fff"}});this.removeChild(e),this.addChild(e),console.time("loaded"),await this.tree.load(),console.timeEnd("loaded"),this.playNextSprite()}playNextSprite(){var t;const e=((t=this.currentTree)==null?void 0:t.getNextVideoTree())||this.tree;e.sprite.play(),this.addChild(e.sprite),e.sprite.once("end",()=>{this.removeChild(e.sprite),this.playNextSprite()}),this.currentTree=e}}class g extends w{constructor(e){super();o(this,"video");o(this,"canvas",document.createElement("canvas"));o(this,"FPS",60);o(this,"textures",[]);this.video=document.createElement("video"),this.video.autoplay=!1,this.video.preload="none",this.video.src=e,this.video.controls=!0;const t=document.getElementById("hidden-video-container");t&&t.appendChild(this.video)}async load(){return new Promise(e=>{const t=async()=>{this.video.removeEventListener("canplay",t),await this.captureFrames(),e()};this.video.addEventListener("canplay",t),this.video.load()})}async captureFrames(){const{duration:e}=this.video,t=1/this.FPS;this.textures=[];for(let i=0;i<=e;i+=t)this.textures.push(await this.captureFrame(i))}captureFrame(e){return new Promise(t=>{const i=async()=>{this.video.removeEventListener("seeked",i),this.canvas.width=this.video.videoWidth,this.canvas.height=this.video.videoHeight;const r=this.canvas.getContext("2d");r==null||r.drawImage(this.video,0,0,this.canvas.width,this.canvas.height);const n=await y.load(this.canvas.toDataURL());t(n)};this.video.currentTime===e?i():(this.video.currentTime=e,this.video.addEventListener("seeked",i))})}play(){let e=1;this.texture=this.textures[e],this.resize();const t=()=>{this.resize(),e++;const i=this.textures[e];if(!i){h.shared.remove(t),this.emit("end");return}this.texture=i};h.shared.add(t)}resize(){const{videoHeight:e,videoWidth:t}=this.video,{screen:{width:i,height:r}}=window.app;let n=1;(t>i||e>r)&&(n=Math.min(i/t,r/e)),this.scale.set(n)}}class d{constructor(s,e,t=[]){o(this,"id");o(this,"sprite");o(this,"nodes");this.id=s,this.sprite=new g(e),this.nodes=t}static fromJSON(s,e=0){var t;return new d(e,s.src,(t=s.nodes)==null?void 0:t.map((i,r)=>d.fromJSON(i,r)))}async load(){await Promise.all([this.sprite.load(),...this.nodes.map(s=>s.load())])}getNextVideoTree(){const s=this.nodes.length;if(s)return this.nodes[Math.floor(Math.random()*s)]}}let l=x;const S=new URLSearchParams(window.location.search),c=S.get("tree");c&&(l=JSON.parse(c));const E=d.fromJSON(l);(async()=>{const a=new f;window.app=a,await a.init({resizeTo:window}),document.body.appendChild(a.canvas);const s=new T(E);a.stage.addChild(s),s.play()})();
